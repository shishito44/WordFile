・コンソールプログラム
文字ベースのインターフェースで動作するプログラム

・REPL（レプル）
Read-Eval-Print Loop（読み込み、評価、表示、ループ）の略で、プログラミング言語の実行環境の一つ。
ユーザーがコードを一行ずつ入力し、その場で結果を確認できるインタラクティブな環境を提供する。

・エコー（echo）
キーボードからの入力を読むと、内部のバッファ等に書き込むだけでなく、直ちに出力として送り返す⇒エコーバック
引数として入力した文字列を出力するコマンドを指す⇒echo
C#だとConsole.WriteLine()が当てはまる

・API
Application Programming Interface の略で、ソフトウェアやアプリケーション同士を繋ぎ、機能やデータを共有するためのインターフェース
apiを活用することによって、外部のサービスや機能を自身のシステムに簡単に組み込めるようになる

・gemini
自然な対話形式でユーザーとコミュニケーションを取ることが可能なgoogleチャット型生成AIツール
マルチモーダルな生成AIモデルである（画像や動画、音声、コードといった幅広い形式の情報利用できる）

・APIキー
API提供事業者から利用者個人またはプロジェクトに対して専用で割り当てられるもの
盗まれると個人情報流出やアカウント停止の恐れがあるので厳重に管理する必要がある
利用者の識別や承認を行うことができセキュリティを高める効果がある

・Nuget
Microsoftが開発したオープンソースのパッケージ管理システム
.NETアプリケーションの開発に必要なライブラリやツールを簡単にインストールできるようにするために設計されている
コードの再利用性が向上し、開発の効率化を図れる

・SDK
Software Development Kit の略称（ソフトウェア開発キット）
ソフトウェアを開発する際に必要なプログラムやAPI・文書・サンプルなどをまとめてパッケージ化したもの
開発を簡単に行うためのツールが内包されている

・ライブラリ
特定のアプリケーション等には依存しない汎用性があるプログラミングのパーツをまとめたツールセットのようなもの

・APIとSDKの違い
APIは様々なサービスとアプリケーションとの連携を促すものであり、
あくまでインターフェースの提供を行うだけなため開発時に直観的に利用しづらい（プログラミング言語に依存しない）
対して、SDKは開発キットとして提供されているため開発を補助してくれるツールも多く、
SDKを利用するためのドキュメントやサンプルも付随しており、利用者が開発を進めやすいようにサポートしてくれる

・命名規則
プログラムのソースコードにおいて、変数名や関数名などの識別子に一貫したルールを適用すること
一般的には、パスカルケースを使って、各単語を大文字で繋げる
例）TaxIncludedPrice

・プロジェクト
一つのプログラムを作るのに必要な各種ファイルを管理するもの
App.configやProgram.csなどを一つにまとめたものをいう 

・ソリューション（課題解決）
一つの課題を解決するのに必要な一連のプロジェクトを管理するもの
必要な複数のプログラムや部品を束ねている